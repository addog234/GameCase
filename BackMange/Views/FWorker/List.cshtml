@model IEnumerable<BackMange.DTO.WorkerDTO>
@{
    Layout = "_FrontendLayout";
    int totalWorkers = ViewBag.TotalWorkers;
    int pageSize = ViewBag.PageSize;
    int currentPage = ViewBag.CurrentPage;
    int totalPages = (int)Math.Ceiling((double)totalWorkers / pageSize);
}

@section Styles
{
    <link href="~/frontuse/css/index.css" rel="stylesheet" />
    <link href="~/frontuse/css/Work/Pcard.css" rel="stylesheet" />
}

<div class="content-wrap" style="position:relative;">
    <div class="container" style="margin-top:120px;margin-bottom:30px">
        <div class="row">
            <!-- 左側篩選欄 -->
            <div class="col-md-3">
                <div class="filter-card">
                    <h5 class="mb-3">篩選條件</h5>
                    <!-- 測試追蹤-->
                    <div class="mb-3">
                        <button onclick="showMyFollowings()" class="btn btn-outline-primary w-100">
                            <i class="bi bi-heart-fill"></i> 我的追蹤
                        </button>
                    </div>
                    <div class="mb-3">
                        <button onclick="resetFilters()" class="btn btn-light">
                            <i class="bi bi-arrow-counterclockwise"></i> 重置所有條件
                        </button>
                    </div>

                    <!-- 評分篩選 -->
                    <div class="mb-3">
                        <label class="form-label">最低評分</label>
                        <select class="form-select" id="ratingFilter">
                            <option value="">不限</option>
                            <option value="4.8">4.8以上 </option>
                            <option value="4.5">4.5 以上</option>
                            <option value="4.0">4.0 以上</option>
                            <option value="3.5">3.5 以上</option>
                        </select>
                    </div>

                    <!-- 案件數篩選 -->
                    <div class="mb-3">
                        <label class="form-label">完成案件數</label>
                        <select class="form-select" id="casesFilter">
                            <option value="">不限</option>
                            <option value="10">10+ 件</option>
                            <option value="20">20+ 件</option>
                            <option value="30">30+ 件</option>
                        </select>
                    </div>

                    <!-- 技能標籤 -->
                        <div class="mb-3">
                            <label class="form-label">技能類型</label>
                            <div class="skill-tags">
                                <button class="btn btn-outline-primary btn-sm m-1" data-skill="前端">前端開發</button>
                                <button class="btn btn-outline-primary btn-sm m-1" data-skill="後端">後端開發</button>
                                <button class="btn btn-outline-primary btn-sm m-1" data-skill="UI">UI設計</button>
                                <button class="btn btn-outline-primary btn-sm m-1" data-skill="平面">平面設計</button>
                                <button class="btn btn-outline-primary btn-sm m-1" data-skill="影片">影片製作</button>
                                <button class="btn btn-outline-primary btn-sm m-1" data-skill="攝影">攝影服務</button>
                                <button class="btn btn-outline-primary btn-sm m-1" data-skill="文案">文案企劃</button>
                                <button class="btn btn-outline-primary btn-sm m-1" data-skill="社群">社群經營</button>
                            </div>
                        </div>
                </div>
            </div>

            <!-- 右側內容區 -->
            <div class="col-md-9">
                <!-- 標題和搜尋排序 -->
                <div class="section-header d-flex justify-content-between align-items-center mb-3">
                    <h1 class="section-title">接案者列表</h1>
                    <div class="search-wrapper">
                        <div class="d-flex gap-2">
                            <input type="text" id="searchInput" placeholder="輸入查詢內容" class="form-control" />
                            <button onclick="searchWorkers(1)" class="btn btn-primary">
                                <i class="bi bi-search"></i> 查詢
                            </button>
                            <button onclick="clearSearch()"
                                    class="btn btn-light"
                                    id="clearSearchBtn"
                                    style="display: none;">
                                <i class="bi bi-trash"></i>清除搜索
                            </button>
                        </div>
                    </div>
                    <div class="sort-wrapper">
                        <span class="me-2">排序方式：</span>
                        <select class="form-select" id="sortOrder" onchange="updateSortOrder()">
                            <option selected>預設排序</option>
                            <option value="1">評分高至低</option>
                            <option value="2">案件數多至少</option>
                            <option value="3">追蹤數多至少</option>
                        </select>
                    </div>
                </div>

                <!-- 卡片列表 -->

                <div class="services-container" id="workerList">
                    @foreach (var item in Model)
                    {
                        <div class="service-card">
                            <div class="card-image">
                                <div class="image-slider">
                                    <div class="card-image image-slider">
                                        <div class="slider-container">
                                            @foreach (var imagePath in item.BackgroundImagePaths)
                                            {
                                                <img src="~/@imagePath" alt="Image" style="width: 100%; height: 100%; object-fit: cover;" />
                                            }
                                        </div>
                                        <button class="slider-btn prev">‹</button>
                                        <button class="slider-btn next">›</button>
                                    </div>
                                </div>
                            </div>
                            <div class="card-content">
                                <div class="content-header">
                                    <div class="provider">
                                        <img src="~/@item.ProfileImagePath" alt="@item.FCodeName" class="avatar" style="object-fit:contain !important" />
                                        <span class="provider-name">@item.FCodeName</span>
                                    </div>
                                    <h3 class="service-title">評分: @item.FRating</h3>
                                </div>
                                <div class="service-description">
                                    <p>@item.ShortDescription</p>
                                    <p>完成案件數: @item.FCompletedTasksCount</p>
                                </div>
                            </div>
                            <div class="card-footer">
                                <div class="d-flex align-items-center">
                                    <button class="heart-btn" data-worker-id="@item.FUserId"
                                            onclick="toggleFollow(this)" aria-label="加入收藏">
                                        <i class="bi bi-heart"></i>
                                    </button>
                                    <small class="ms-1">@(item.FollowCount)人追蹤中</small>
                                </div>
                                <a href="@Url.Action("Details", "FWorker", new { id = item.FUserId })" class="btn btn-primary">查看詳情</a>
                            </div>
                        </div>
                    }
                </div>

                <!-- 分頁 -->
                @if (totalPages > 1)
                {
                    <div class="worker-pagination mt-2">
                        <ul class="pagination d-flex justify-content-center">
                            @{
                                if (totalPages <= 7)
                                {
                                    for (int i = 1; i <= totalPages; i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" href="javascript:void(0)"
                                               onclick="document.getElementById('searchInput').value.trim() ? searchWorkers(@i) : updateSortOrder(@i)">@i</a>
                                        </li>
                                    }
                                }
                                else
                                {
                                    <li class="page-item @(1 == currentPage ? "active" : "")">
                                        <a class="page-link" href="javascript:void(0)"
                                           onclick="document.getElementById('searchInput').value.trim() ? searchWorkers(1) : updateSortOrder(1)">1</a>
                                    </li>

                                    @if (currentPage > 3)
                                    {
                                        <li class="page-item disabled"><span class="page-link">...</span></li>
                                    }

                                    @for (int i = Math.Max(2, currentPage - 2);
                               i <= Math.Min(totalPages - 1, currentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" href="javascript:void(0)"
                                               onclick="document.getElementById('searchInput').value.trim() ? searchWorkers(@i) : updateSortOrder(@i)">@i</a>
                                        </li>
                                    }

                                    @if (currentPage < totalPages - 2)
                                    {
                                        <li class="page-item disabled"><span class="page-link">...</span></li>
                                    }

                                    <li class="page-item @(totalPages == currentPage ? "active" : "")">
                                        <a class="page-link" href="javascript:void(0)"
                                           onclick="document.getElementById('searchInput').value.trim() ? searchWorkers(@totalPages) : updateSortOrder(@totalPages)">@totalPages</a>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="modal fade" id="followingModal" tabindex="-1" style="background: rgba(0, 0, 0, 0.4);">
        <div class="modal-dialog" style="width: 100%; max-width: 600px; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">
            <div class="modal-content" style="border-radius: 8px;">
                <div class="modal-header" style="background-color: #f0f2f5; border-bottom: none;">
                    <h5 class="modal-title">我的追蹤列表</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" style="background-color: #f0f2f5; padding: 16px;">
                    <div id="followingListContainer" style="background-color: #ffffff; border-radius: 8px; overflow: hidden; box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);">
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


@* 引入需要的 JavaScript *@
@section Scripts {    
    <script src="~/js/Follow/Follow.js"></script>
    <script src="~/js/Follow/Search.js"></script>
    <script>
        // 排序功能

        function updateSortOrder(page = 1) {
            const hasActiveSearch = document.getElementById('clearSearchBtn').style.display === 'block';
            const sortOrder = document.getElementById('sortOrder').value;

            // 如果不是活動搜索狀態，清空搜索框
            if (!hasActiveSearch) {
                document.getElementById('searchInput').value = '';
            }

            // 如果有活動的搜索（已經點擊過搜索按鈕），則執行搜索
            if (hasActiveSearch) {
                searchWorkers(page);
                return;
            }

            const ratingFilter = document.getElementById('ratingFilter').value;
            const casesFilter = document.getElementById('casesFilter').value;
            const selectedSkills = Array.from(document.querySelectorAll('.skill-tags .btn.active'))
                .map(btn => btn.getAttribute('data-skill'));

            let url = '/FWorker/GetWorkers';
            url += `?sortOrder=${sortOrder}&page=${page}&pageSize=12`;
            if (ratingFilter) url += `&minRating=${ratingFilter}`;
            if (casesFilter) url += `&minCases=${casesFilter}`;
            if (selectedSkills.length > 0) url += `&skills=${selectedSkills.join(',')}`;

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    updateWorkerList(data.Workers);
                    updatePagination(data.currentPage, data.totalPages, 'updateSortOrder');
                });
        }
        // 更新列表函數
        function updateWorkerList(Workers) {
            const servicesContainer = document.querySelector('.services-container');
            servicesContainer.innerHTML = '';
            console.log(Workers);

            Workers.forEach(item => {
                let cardHTML = `<div class="service-card">
                            <div class="card-image">
                                <div class="image-slider">
                                    <div class="card-image image-slider">
                                        <div class="slider-container">`;

                item.BackgroundImagePaths.forEach(imagePath => {
                    cardHTML += `<img src="/${imagePath}" alt="Image" style="width: 100%; height: 100%; object-fit: cover;" />`;
                });

                cardHTML += `
                                        </div>
                                        <button class="slider-btn prev">‹</button>
                                        <button class="slider-btn next">›</button>
                                    </div>
                                </div>
                            </div>
                            <div class="card-content">
                                <div class="content-header">
                                    <div class="provider">
                                        <img src="/${item.ProfileImagePath}" alt="${item.FCodeName}" class="avatar" style="object-fit:contain !important" />
                                        <span class="provider-name">${item.FCodeName}</span>
                                    </div>
                                    <h3 class="service-title">評分: ${item.FRating}</h3>
                                </div>
                                <div class="service-description">
                                    <p>${item.ShortDescription}</p>
                                    <p>完成案件數: ${item.FCompletedTasksCount}</p>
                                </div>
                            </div>
                                    <div class="card-footer">
                            <div class="d-flex align-items-center">
                                <button class="heart-btn"
                                    data-worker-id="${item.FUserId}"
                                    onclick="toggleFollow(this)"
                                    aria-label="加入收藏">
                                    <i class="bi bi-heart"></i>
                                </button>
                                                 <small class="ms-1">${item.FollowCount}人追蹤中</small>
                            </div>
                                <a href="/FWorker/Details/${item.FUserId}" class="btn btn-primary">查看詳情</a>
                            </div>
                        </div>`;

                servicesContainer.innerHTML += cardHTML;
            });

            // 初始化圖片輪播
            initImageSliders();

            // 初始化追蹤狀態
            document.querySelectorAll('.heart-btn').forEach(btn => {
                const workerId = btn.getAttribute('data-worker-id');
                if (workerId) {  // 確保有 workerId 才檢查
                    checkFollowStatus(workerId, btn);
                }
            });
        }


        // 搜尋功能

        function searchWorkers(page = 1) {
            const query = document.getElementById('searchInput').value.trim();
            if (!query) {
                clearSearch();
                return;
            }

            const sortOrder = document.getElementById('sortOrder').value;
            const ratingFilter = document.getElementById('ratingFilter').value;
            const casesFilter = document.getElementById('casesFilter').value;
            const selectedSkills = Array.from(document.querySelectorAll('.skill-tags .btn.active'))
                .map(btn => btn.getAttribute('data-skill'));

            let url = `/FWorker/Search?query=${query}&sortOrder=${sortOrder}&page=${page}&pageSize=12`;
            if (ratingFilter) url += `&minRating=${ratingFilter}`;
            if (casesFilter) url += `&minCases=${casesFilter}`;
            if (selectedSkills.length > 0) url += `&skills=${selectedSkills.join(',')}`;

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    updateWorkerList(data.Workers);
                    updatePagination(data.currentPage, data.totalPages, 'searchWorkers');
                    document.getElementById('clearSearchBtn').style.display = 'block';
                });
        }
        
        function resetFilters() {
            // 重置所有篩選條件
            document.getElementById('ratingFilter').value = '';
            document.getElementById('casesFilter').value = '';
            document.querySelectorAll('.skill-tags .btn.active').forEach(btn => {
                btn.classList.remove('active');
            });

            // 重置排序
            document.getElementById('sortOrder').value = 'default';

            // 重新載入列表
            fetch('/FWorker/GetWorkers?page=1&pageSize=12')
                .then(response => response.json())
                .then(data => {
                    if (data && data.Workers) {
                        updateWorkerList(data.Workers);
                        updatePagination(data.currentPage, data.totalPages, 'updateSortOrder');
                    }
                })
                .catch(error => {
                    console.error('重置篩選時發生錯誤:', error);
                });
        }
        // 加入清除搜尋功能
        function clearSearch() {
            // 清除搜尋框內容和隱藏清除按鈕
            document.getElementById('searchInput').value = '';
            document.getElementById('clearSearchBtn').style.display = 'none';
            document.getElementById('sortOrder').value = 'default';
            // 新增：重置所有篩選條件
            document.getElementById('ratingFilter').value = '';  // 重置評分篩選
            document.getElementById('casesFilter').value = '';   // 重置案件數篩選

            // 重置所有技能標籤的選中狀態
            document.querySelectorAll('.skill-tags .btn.active').forEach(btn => {
                btn.classList.remove('active');
            });


            // 使用 fetch 重新載入列表
            fetch('/FWorker/GetWorkers?page=1&pageSize=12')
                .then(response => response.json())
                .then(data => {
                    if (data && data.Workers) {  // 確保有資料
                        console.log('清除搜尋，重新載入資料:', data);
                        updateWorkerList(data.Workers);
                        updatePagination(data.currentPage, data.totalPages, 'updateSortOrder');
                    } else {
                        console.error('返回的資料格式不正確:', data);
                    }
                })
                .catch(error => {
                    console.error('清除搜尋時發生錯誤:', error);
                });
        }

        // 更新分頁
        function createPageItem(page, currentPage, callback) {
            page = Number(page);
            currentPage = Number(currentPage);

            return `<li class="page-item ${page === currentPage ? 'active' : ''}">
                        <a class="page-link" href="javascript:void(0)"
                           onclick="${callback}(${page})">${page}</a>
                    </li>`;
        }

        // 更新分頁
        function updatePagination(currentPage, totalPages, callback) {
            // 確保數值正確
            currentPage = Number(currentPage) || 1;
            totalPages = Number(totalPages) || 1;

            // 檢查數值
            if (isNaN(currentPage) || isNaN(totalPages) || totalPages <= 0) {
                console.error('❌ Invalid pagination values:', { currentPage, totalPages });
                return;
            }

            const pagination = document.querySelector('.pagination');
            let html = '';

            // 總是顯示第一頁
            html += createPageItem(1, currentPage, callback);

            // 當頁數大於 1 時顯示其他頁碼
            if (totalPages > 1) {
                // 當當前頁與第一頁相差超過 3 頁時才顯示省略號
                if (currentPage > 4) {
                    html += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }

                // 計算要顯示的頁碼範圍
                let startPage = Math.max(2, currentPage - 2);
                let endPage = Math.min(totalPages - 1, currentPage + 2);

                // 確保頁碼範圍合理
                if (startPage === 2) {
                    endPage = Math.min(totalPages - 1, 5);
                }
                if (endPage === totalPages - 1) {
                    startPage = Math.max(2, totalPages - 4);
                }

                // 生成中間頁碼
                for (let i = startPage; i <= endPage; i++) {
                    html += createPageItem(i, currentPage, callback);
                }

                // 只在距離最後一頁超過 3 頁時顯示省略號
                if (currentPage < totalPages - 3) {
                    html += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }

                // 總是顯示最後一頁
                html += createPageItem(totalPages, currentPage, callback);
            }

            pagination.innerHTML = html;
        }


        // 初始化圖片輪播
        function initImageSliders() {
            document.querySelectorAll('.image-slider').forEach(slider => {
                const container = slider.querySelector('.slider-container');
                const images = container.querySelectorAll('img');
                let currentIndex = 0;

                function showImage(index) {
                    container.style.transform = `translateX(-${index * 100}%)`;
                }

                slider.querySelector('.prev')?.addEventListener('click', () => {
                    currentIndex = (currentIndex > 0) ? currentIndex - 1 : images.length - 1;
                    showImage(currentIndex);
                });

                slider.querySelector('.next')?.addEventListener('click', () => {
                    currentIndex = (currentIndex < images.length - 1) ? currentIndex + 1 : 0;
                    showImage(currentIndex);
                });

                showImage(currentIndex);
            });
        }
        // 2. 在 <script> 區塊最後加入篩選條件的事件監聽
        document.addEventListener('DOMContentLoaded', function () {
            // 評分篩選
            document.getElementById('ratingFilter').addEventListener('change', function () {
                const hasActiveSearch = document.getElementById('clearSearchBtn').style.display === 'block';
                if (!hasActiveSearch) {
                    document.getElementById('searchInput').value = '';
                }
                updateSortOrder(1);
            });

            // 案件數篩選
            document.getElementById('casesFilter').addEventListener('change', function () {
                const hasActiveSearch = document.getElementById('clearSearchBtn').style.display === 'block';
                if (!hasActiveSearch) {
                    document.getElementById('searchInput').value = '';
                }
                updateSortOrder(1);
            });

            // 技能標籤
            document.querySelectorAll('.skill-tags .btn').forEach(btn => {
                btn.replaceWith(btn.cloneNode(true));
            });

            // 重新綁定事件
            document.querySelectorAll('.skill-tags .btn').forEach(btn => {
                btn.addEventListener('click', function (event) {
                    event.preventDefault();
                    event.stopPropagation();

                    const hasActiveSearch = document.getElementById('clearSearchBtn').style.display === 'block';
                    if (!hasActiveSearch) {
                        document.getElementById('searchInput').value = '';
                    }

                    const wasActive = this.classList.contains('active');
                    this.classList.toggle('active');

                    if (wasActive !== this.classList.contains('active')) {
                        updateSortOrder(1);
                    }
                });
            });

            // 初始化輪播
            initImageSliders();
        });
    </script>
}